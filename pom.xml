<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.docs</groupId>
	<artifactId>springboot-restdoc-swagger</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>springboot-restdoc-swagger</name>
	<description>Demo project for Spring Boot, RestDoc, Swagger</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- asciidoc -->
		<spring-auto-restdocs.version>2.0.1</spring-auto-restdocs.version>
		<springfox.version>2.8.0</springfox.version>
		<jruby.version>9.2.0.0</jruby.version>
		<asciidoctorj-pdf.version>1.5.0-alpha.16</asciidoctorj-pdf.version>

		<!--Swagger docs -->
		<swagger2markup.version>1.3.3</swagger2markup.version>

		<asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
		<swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
		<swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
		<generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		<asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
		<swagger.input>${swagger.output.dir}/swagger.json</swagger.input>

	</properties>

	<repositories>

		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>io.spring.repo.maven.release</id>
			<url>http://repo.spring.io/release/</url>
		</repository>

		<repository>
			<id>io.spring.repo.maven.milestone</id>
			<url>http://repo.spring.io/milestone/</url>
		</repository>

		<repository>
			<id>io.spring.repo.maven.snapshot</id>
			<url>http://repo.spring.io/snapshot/</url>
		</repository>

		<repository>
			<id>oss-jfrog-artifactory</id>
			<name>oss-jfrog-artifactory-releases</name>
			<url>http://oss.jfrog.org/artifactory/oss-release-local</url>
		</repository>

		<repository>
			<id>jvnet-nexus-releases</id>
			<name>jvnet-nexus-releases</name>
			<url>https://maven.java.net/content/repositories/releases/</url>
		</repository>

		<repository>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
	        <id>jcenter-releases</id>
	        <name>jcenter</name>
	        <url>http://jcenter.bintray.com</url>
	    </repository>
	</repositories>

	<pluginRepositories>
	    <pluginRepository>
	        <id>jcenter-snapshots</id>
	        <name>jcenter</name>
	        <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
	    </pluginRepository>
	    <pluginRepository>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
	        <id>jcenter-releases</id>
	        <name>jcenter</name>
	        <url>http://jcenter.bintray.com</url>
	    </pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- SpringFox Swagger UI -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<!-- TESTING -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>2.6.1</version>
            <scope>test</scope>
        </dependency>       
		<dependency>
			<groupId>io.github.swagger2markup</groupId>
			<artifactId>swagger2markup-spring-restdocs-ext</artifactId>
			<version>${swagger2markup.version}</version>
			<!-- <scope>test</scope> -->
		</dependency>
		<dependency>
			<groupId>capital.scalable</groupId>
			<artifactId>spring-auto-restdocs-core</artifactId>
			<version>${spring-auto-restdocs.version}</version>
			<!-- <scope>test</scope> -->
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <!-- <org.springframework.restdocs.outputDir>${snippetsDirectory}</org.springframework.restdocs.outputDir> -->
                       <!--  <org.springframework.restdocs.outputDir>${swagger.snippetOutput.dir}/hello</org.springframework.restdocs.outputDir>    -->                     
                        <org.springframework.restdocs.javadocJsonDir>${project.build.directory}/generated-javadoc-json</org.springframework.restdocs.javadocJsonDir>
                        
                        <io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
                        <!-- <io.springfox.staticdocs.snippetsOutputDir>${snippetsDirectory}</io.springfox.staticdocs.snippetsOutputDir> -->
                        <io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
                    </systemPropertyVariables>
                    <printSummary>true</printSummary>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
            </plugin>
           

			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>createClassesDir</id>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/unwoven-classes" />
                                <mkdir dir="${swagger.output.dir}"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

			<!-- First, use the swagger2markup plugin to generate asciidoc -->
			<plugin>
				<groupId>io.github.swagger2markup</groupId>
				<artifactId>swagger2markup-maven-plugin</artifactId>
				<version>${swagger2markup.version}</version>
				<configuration>
					<swaggerInput>${swagger.input}</swaggerInput>
					<!-- <outputDir>${generated.asciidoc.directory}</outputDir> -->
					<outputDir>${generated.asciidoc.directory}</outputDir>
					<config>
						<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
						<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>

						<swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>
						<swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>
						<swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>
						<swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath>

						<!-- <swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}</swagger2markup.extensions.springRestDocs.snippetBaseUri> -->
						<swagger2markup.extensions.springRestDocs.snippetBaseUri>${project.build.directory}/generated-snippets</swagger2markup.extensions.springRestDocs.snippetBaseUri>
						
						<swagger2markup.extensions.springRestDocs.defaultSnippets>true</swagger2markup.extensions.springRestDocs.defaultSnippets>
					</config>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>convertSwagger2markup</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			
            <!-- 
                https://dzone.com/articles/configuring-the-asciidoctor-maven-plugin
                https://medium.com/@flbenz/beautiful-api-documentation-with-negligible-overhead-2ba523205f61
             -->
            
            
            <!-- Run the generated asciidoc through Asciidoctor to generate other 
                documentation types, such as PDFs or HTML5 -->
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>1.5.3</version>
                <!-- Include Asciidoctor PDF for pdf generation -->
                <dependencies>
                    <!-- <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency> -->
                    <!-- <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj-pdf.version}</version>
                    </dependency> -->
                </dependencies>
                <!-- Configure generic document generation settings -->
                <configuration>
                    <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
                    <sourceDocumentName>index.adoc</sourceDocumentName>

                    <sourceHighlighter>coderay</sourceHighlighter>
                    <attributes>
                        <doctype>book</doctype>
                        <toc>left</toc>
                        <toclevels>3</toclevels>
                        <numbered></numbered>
                        <hardbreaks></hardbreaks>
                        <sectlinks></sectlinks>
                        <sectanchors></sectanchors>
                        <generated>${generated.asciidoc.directory}</generated>
                        <snippets>${project.build.directory}/generated-snippets</snippets>
                    </attributes>
                </configuration>
                <!-- Since each execution can only handle one backend, run separate executions 
                    for each desired output type -->
                <executions>
                   <!--  <execution>
                        <id>output-html</id>
                        <phase>test</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                            <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
                        </configuration>
                    </execution> -->
                    
                    <execution>
                        <id>output-html2</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <!-- <sourceDocumentName>apidocsindex.adoc</sourceDocumentName> -->
                            <!-- <sourceDirectory>src/main/asciidoc</sourceDirectory> -->
                            <headerFooter>true</headerFooter>
                            <sourceHighlighter>highlightjs</sourceHighlighter> 
                            <backend>html</backend>
                             <!-- <backend>html5</backend> -->
                            <doctype>book</doctype>
                            <attributes> <!-- Full list of attributes at: http://asciidoctor.org/docs/user-manual/#attribute-catalog -->
                                <project-version>${project.version}</project-version>
                                <!-- <snippets>${snippetsDirectory}</snippets> -->
                               <!--  <snippets>${swagger.snippetOutput.dir}</snippets>   --> 
                                 <snippets>${project.build.directory}/generated-snippets</snippets>                             
                                
                                <sectnums>false</sectnums>                                                             
                                <linkcss>true</linkcss>    
                                <revnumber>${project.version}</revnumber>
                                <revdate>${maven.build.timestamp}</revdate>
                                <icons>font</icons>
                                <toc>left</toc>
                                <toclevels>4</toclevels>

                                <organization>${project.organization.name}</organization>
                                <last-update-label>false</last-update-label>
                                
                                <imagesdir>images</imagesdir>     
                                <stylesdir>css</stylesdir>                           
                                <!-- <stylesheet>grindrod-asciidoctor.min.css</stylesheet> -->
                                
                                 <docinfo1>true</docinfo1>
                            </attributes>
                        </configuration>
                    </execution>

                    <!-- <execution>
                        <id>output-pdf</id>
                        <phase>test</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>pdf</backend>
                            <outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
                        </configuration>
                    </execution> -->
                </executions>
            </plugin>
		</plugins>
	</build>


</project>
